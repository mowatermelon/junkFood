<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
                        http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring   
 						http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">
	<!--<ehcache:annotation-driven cache-manager="ehCacheManager" /> 
 
 	 <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
       <property name="configLocation" value="classpath:ehcache.xml" />  
   </bean>  -->

	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.geostar.gfstack.usersystem" />

	<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">  
           <list>  
              <value>classpath:config.properties</value>  
            </list>  
        </property>  
    </bean> -->
    
    
    
<!-- 	<context:property-placeholder location="classpath:config.properties" /> -->
	<!-- 数据源配置,使用应用内的JNDI或JDBC连接数据库（开发阶段使用JDBC，上线运行使用JNDI） -->
	<bean id="userDataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>${user.jdbc.driver}</value>
		</property>
		<property name="url">
			<value>${user.jdbc.url}</value>
		</property>
		<property name="username">
			<value>${user.jdbc.username}</value>
		</property>
		<property name="password">
			<value>${user.jdbc.password}</value>
		</property>
		<property name="maxActive">
			<value>${user.jdbc.maxActive}</value>
		</property>
		<property name="maxIdle">
			<value>${user.jdbc.maxIdle}</value>
		</property>
		<property name="maxWait">
			<value>${user.jdbc.maxWait}</value>
		</property>
		<property name="logAbandoned">
			<value>${user.jdbc.logAbandoned}</value>
		</property>
		<property name="removeAbandoned">
			<value>${user.jdbc.removeAbandoned}</value>
		</property>
		<property name="removeAbandonedTimeout">
			<value>${user.jdbc.removeAbandonedTimeout}</value>
		</property>
		<property name="timeBetweenEvictionRunsMillis">
				<value>${user.jdbc.timeBetweenEvictionRunsMillis}</value>
		</property>
		<property name="testWhileIdle">
				<value>${user.jdbc.testWhileIdle}</value>
		</property>
		<property name="validationQuery">
				<value>${user.jdbc.validationQuery}</value>
		</property>

	</bean>

	<!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName"><value>${jdbc.jndiname}</value></property>
		<property name="jndiEnvironment">
		<props>
		<prop key="java.naming.provider.url">${jdbc.jndiprovider}</prop>
		<prop key="java.naming.factory.initial">weblogic.jndi.WLInitialContextFactory</prop>
		</props>
		</property>
		</bean>-->

	<!-- Hibernate配置 -->
	<bean id="userSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
<!-- 		<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> -->
		<property name="dataSource">
			<ref bean="userDataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${user.hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${user.hibernate.show_sql}
				</prop>
				<prop key="hibernate.query.factory_class">
					${user.hibernate.query.factory_class}
				</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.geostar.gfstack.usersystem.*.model</value>
				<value>com.geostar.gfstack.usersystem.*.*.model</value>
			</list>
		</property>
<!-- 		<property name="annotatedClasses"></property> -->
	</bean>
	
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="userTransactionManager"  
      class="org.springframework.orm.hibernate4.HibernateTransactionManager">   
     <property name="sessionFactory" ref="userSessionFactory" />   
   </bean>   
  
   <tx:advice id="userTxAdvice" transaction-manager="userTransactionManager">   
     <tx:attributes>   
       <tx:method name="insert*" propagation="REQUIRED" />   
         <tx:method name="update*" propagation="REQUIRED" />   
       <tx:method name="edit*" propagation="REQUIRED" />   
      <tx:method name="save*" propagation="REQUIRED" />   
        <tx:method name="add*" propagation="REQUIRED" />   
        <tx:method name="new*" propagation="REQUIRED" />   
        <tx:method name="set*" propagation="REQUIRED" />   
         <tx:method name="remove*" propagation="REQUIRED" />   
       <tx:method name="delete*" propagation="REQUIRED" />   
        <tx:method name="change*" propagation="REQUIRED" />   
       <tx:method name="get*" propagation="REQUIRED" read-only="true" />   
       <tx:method name="find*" propagation="REQUIRED" read-only="true" />   
        <tx:method name="load*" propagation="REQUIRED" read-only="true" />   
         <tx:method name="*" propagation="REQUIRED" read-only="true" />   
     </tx:attributes>   
   </tx:advice>  
	
 <aop:config> 
        <aop:advisor pointcut="execution(* com.geostar.gfstack.usersystem.*.service.*Service.*(..))"  advice-ref="userTxAdvice" /> 
        <aop:advisor pointcut="execution(* com.geostar.gfstack.usersystem.*.*.service.*Service.*(..))"  advice-ref="userTxAdvice" />
    </aop:config>  
	
	<import resource="classpath:userconfig/applicationContext-security.xml" />
</beans>
